"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class FetchClientPrefundRequestRequest:
    client_hash_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'clientHashId', 'style': 'simple', 'explode': False }})
    r"""Unique client Id assigned to the client during the onboarding process."""
    amount: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'amount', 'style': 'form', 'explode': True }})
    r"""amount"""
    bank_reference_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'bankReferenceNumber', 'style': 'form', 'explode': True }})
    r"""bankReferenceNumber"""
    currency: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'currency', 'style': 'form', 'explode': True }})
    r"""currency"""
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endDate', 'style': 'form', 'explode': True }})
    r"""endDate"""
    order: Optional[str] = dataclasses.field(default='DESC', metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""The sort order for the results. Acceptable values are ASC or DESC.
    The default order value is DESC.
    """
    page: Optional[int] = dataclasses.field(default=0, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""This API may have lot of data in response and supports pagination. Entire response data is divided into pages with size as the upper limit on the number of data. Integer values from 0 onwards are acceptable.
    Default page is 0.
    """
    prefund_status: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'prefundStatus', 'style': 'form', 'explode': True }})
    r"""prefundStatus"""
    size: Optional[int] = dataclasses.field(default=20, metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    r"""The upper limit on the number of items to be fetched with each call. Integer values from 1 onwards are acceptable.
    Default size is 20.
    """
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startDate', 'style': 'form', 'explode': True }})
    r"""startDate"""
    system_reference_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'systemReferenceNumber', 'style': 'form', 'explode': True }})
    r"""systemReferenceNumber"""
    unique_payer_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uniquePayerId', 'style': 'form', 'explode': True }})
    r"""uniquePayerId"""
    unique_payment_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uniquePaymentId', 'style': 'form', 'explode': True }})
    r"""uniquePaymentId"""
    x_request_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'x-request-id', 'style': 'simple', 'explode': False }})
    r"""Enter a unique UUID value"""
    



@dataclasses.dataclass
class FetchClientPrefundRequestResponseBody:
    r"""OK"""
    



@dataclasses.dataclass
class FetchClientPrefundRequestResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: Optional[FetchClientPrefundRequestResponseBody] = dataclasses.field(default=None)
    r"""OK"""
    

