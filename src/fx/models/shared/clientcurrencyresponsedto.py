"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from fx import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClientCurrencyResponseDTO:
    authorization_order: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizationOrder'), 'exclude': lambda f: f is None }})
    r"""This is the authorization order based on priority for available currencies. The order starts from 0 as a highest priority."""
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)."""
    decimal_unit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decimalUnit'), 'exclude': lambda f: f is None }})
    r"""This field contains the decimal unit which will be used for rounding off, for example 0"""
    fx_sell_allowed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fxSellAllowed'), 'exclude': lambda f: f is None }})
    r"""This field indicates if forex sell is allowed or not for the currency."""
    remittance_allowed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remittanceAllowed'), 'exclude': lambda f: f is None }})
    r"""This field specifies if the remittance is allowed with the respective currency or not."""
    

