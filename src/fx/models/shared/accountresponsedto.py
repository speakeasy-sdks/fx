"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from fx import utils
from typing import Optional

class AccountResponseDTOAccountType(str, Enum):
    r"""This field contains the name of the currency pool, for example, \\"currency pool\\"."""
    NIUM_POOL = 'NIUM_POOL'
    CLIENT_POOL = 'CLIENT_POOL'
    WALLET_POOL = 'WALLET_POOL'
    INCOME_POOL = 'INCOME_POOL'
    EXPENSE_POOL = 'EXPENSE_POOL'
    RECEIVABLE_POOL = 'RECEIVABLE_POOL'
    UNSETTLED_POOL = 'UNSETTLED_POOL'
    PAYABLE_POOL = 'PAYABLE_POOL'
    SUSPENSE_POOL = 'SUSPENSE_POOL'
    HOLD_POOL = 'HOLD_POOL'
    REMIT_POOL = 'REMIT_POOL'
    NETWORK_POOL = 'NETWORK_POOL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountResponseDTO:
    account_type: Optional[AccountResponseDTOAccountType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountType'), 'exclude': lambda f: f is None }})
    r"""This field contains the name of the currency pool, for example, \\"currency pool\\"."""
    balance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""This field contains the available balance in the pool mentioned in accountType field."""
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'exclude': lambda f: f is None }})
    r"""This field contains the date and time of create for an account type."""
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) in which the balance is specified."""
    is_default: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDefault'), 'exclude': lambda f: f is None }})
    r"""This flag will be true only for base currency and false for other currencies."""
    updated_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'exclude': lambda f: f is None }})
    r"""This field contains the date and time of last update for an account type."""
    

