"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from fx import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegisteredAddress:
    address_line1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine1'), 'exclude': lambda f: f is None }})
    r"""This field accepts the address line1 of the registered address for the new corporate entity to be onboarded.

    AU: Required
    EU: Required
    UK: Required
    SG: Required
    """
    address_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine2'), 'exclude': lambda f: f is None }})
    r"""This field accepts the address line2 of the registered address for the new corporate entity to be onboarded.

    AU: Required
    EU: Optional
    UK: Optional
    SG: Optional
    """
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city'), 'exclude': lambda f: f is None }})
    r"""This field accepts the city name of the registered address for the new corporate entity to be onboarded.

    AU: Required
    EU: Required
    UK: Required
    SG: Required
    """
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""This field accepts the [2-letter ISO Alpha-2](https://nium-documents.s3-eu-west-1.amazonaws.com/spend-documents/Country+Code.pdf) country code of the registered address for the corporate entity to be onboarded.

    AU: Required
    EU: Required
    UK: Required
    SG: Required
    """
    postcode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postcode'), 'exclude': lambda f: f is None }})
    r"""This field accepts the zip code or postal code of the registered address for the corporate entity to be onboarded.

    AU: Required
    EU: Required
    UK: Required
    SG: Required
    """
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""This field accepts the state for the new corporate entity to be onboarded.

    AU: Required
    EU: Required
    UK: Required
    SG: Required
    """
    

